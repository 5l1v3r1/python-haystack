
- following memory_handler changes, the __book cache seems to forget about some ctypes buffers.
  not cool. on get_context.
  Function getRef deactivated. it doesnt bug anymore. 
  it impacts performance _a lot_ to deactivate the cache.
  To be obseleted ?
  But output_to_python depends on it... TODO
  
  
- use PEB search to double check that we find all HEAPs in standard scenarios.
- orient winheap to work with heap, not with heap aligned on mapping.start.

- FIX winXP x86 heapwalker, then work on vol.

- use pycallgraph to cProfile a HEAP validation.
- make a callback profiler that profiles the graph path validation of a structure in graphical format
- using a decorator would be fun

***** heap walker validator is not a validator all by itself.

- add a depth parameter to constraints loading on list fields.
- separate listmodel in a constraints like config file ?

- a working str() on Ctypes.loadableMembers requires no instanciated utils

- add an searcher configuration for padding value == 0 ( to be forwarded to basicmodel)
- padding value should be 0 most of the time. make it configurable/monkeypatchable

- use ASN.1 for constraints. ??

- FIX get_heap on windows XP/zeus demo. Extract a process from a vol dump to make a test case.
- add a hintoffset search thingy, so that one can search for a structure at a particular offset of a mmap ? maybe to complex for API

- make a listmodel method for arrays of structures
- make the winxp freelists method to work.

- use heapwalker plugins from rekall/volatility to create a proxy heapwalker ?


Attribute packed is not correct in ctypeslib

 - proper way to load constraints and bit-dependant modules is side by side
 
    # A - the caller has to load the proper bit-dependant python code,
    ctypes3 = cls.my_model.import_module("test.src.ctypes3_gen64")
    # my_model is alreadytarget dependant

    # B - then apply constraints on module.
    handler = constraints.ConstraintsConfigHandler()
    my_constraints = handler.read('test/src/ctypes3.constraints')
    results = haystack.search_record(self.memory_handler, self.ctypes3.struct_test3, my_constraints)



Todo:
 - Add a struct beautifier for the string formatting. (hex vs int)
 - easy API
 - documented example
 - Rekall plugin
 - Rekall memorymap
 - make basicmodel:loadable members work with vtypes ?
 - Check why pdfbparse reports some gaps in structs gap_in_pdb_ofs_3C (HEAP)
 - pylint ignore W0212 in profiles.
 - add PyQt4 as dependency for optional functions
 - Add to ipython


